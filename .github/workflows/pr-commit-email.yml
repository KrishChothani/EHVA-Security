name: PR & Commit Notification Email

on:
  workflow_call:
    inputs:
      maintainer_email:
        description: "Email address of the maintainer"
        required: true
        type: string

      # Added optional inputs to receive caller context
      PR_TITLE:
        description: "Pull request title (optional)"
        required: false
        type: string
      PR_URL:
        description: "Pull request URL (optional)"
        required: false
        type: string
      CONTRIBUTOR:
        description: "PR contributor login (optional)"
        required: false
        type: string

      BRANCH:
        description: "Branch name (optional)"
        required: false
        type: string
      COMMITTER:
        description: "Committer (optional)"
        required: false
        type: string
      COMMIT_MESSAGE:
        description: "Commit message (optional)"
        required: false
        type: string
      COMMIT_URL:
        description: "Commit URL (optional)"
        required: false
        type: string

    secrets:
      SMTP_HOST:
        required: true
      SMTP_PORT:
        required: true
      SMTP_USER:
        required: true
      SMTP_PASS:
        required: true

jobs:
  send_email:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Nodemailer
        run: npm install nodemailer

      - name: Send Notification Email
        run: |
          node -e "
            const nodemailer = require('nodemailer');
            const port = Number(process.env.SMTP_PORT) || 465;
            const transporter = nodemailer.createTransport({
              host: process.env.SMTP_HOST,
              port,
              secure: port === 465,
              auth: { user: process.env.SMTP_USER, pass: process.env.SMTP_PASS }
            });

            const isPR = !!process.env.PR_TITLE;
            let subject, htmlContent;

            if (isPR) {
              subject = \`PR Notification: \${process.env.PR_TITLE}\`;
              htmlContent = \`
                <h3>Hello Maintainer,</h3>
                <p>A contributor has submitted or updated a pull request.</p>
                <ul>
                  <li><strong>Contributor:</strong> \${process.env.CONTRIBUTOR}</li>
                  <li><strong>PR Title:</strong> \${process.env.PR_TITLE}</li>
                  <li><strong>PR Link:</strong> <a href='\${process.env.PR_URL}'>View PR</a></li>
                </ul>
              \`;
            } else {
              subject = \`Commit Notification: \${process.env.COMMIT_MESSAGE}\`;
              htmlContent = \`
                <h3>Hello Maintainer,</h3>
                <p>A commit has been pushed to the repository.</p>
                <ul>
                  <li><strong>Branch:</strong> \${process.env.BRANCH}</li>
                  <li><strong>Committer:</strong> \${process.env.COMMITTER}</li>
                  <li><strong>Message:</strong> \${process.env.COMMIT_MESSAGE}</li>
                  <li><strong>Commit Link:</strong> <a href='\${process.env.COMMIT_URL}'>View Commit</a></li>
                </ul>
              \`;
            }

            const mailOptions = {
              from: process.env.SMTP_USER,
              to: process.env.MAINTAINER_EMAIL,
              subject,
              html: htmlContent
            };

            transporter.sendMail(mailOptions, (err, info) => {
              if (err) {
                console.error('❌ Email failed:', err);
                process.exit(1);
              } else {
                console.log('✅ Email sent:', info.response);
              }
            });
          "
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAINTAINER_EMAIL: ${{ inputs.maintainer_email }}

          # Use inputs (passed from caller) instead of github.event.* which won't be populated here
          PR_TITLE: ${{ inputs.PR_TITLE || '' }}
          PR_URL: ${{ inputs.PR_URL || '' }}
          CONTRIBUTOR: ${{ inputs.CONTRIBUTOR || '' }}

          BRANCH: ${{ inputs.BRANCH || '' }}
          COMMITTER: ${{ inputs.COMMITTER || '' }}
          COMMIT_MESSAGE: ${{ inputs.COMMIT_MESSAGE || '' }}
          COMMIT_URL: ${{ inputs.COMMIT_URL || '' }}

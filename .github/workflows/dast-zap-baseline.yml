name: DAST (ZAP Baseline)

on:
  workflow_call:
    inputs:
      target:
        type: string
        required: true
      max_time:
        type: number
        default: 5
      artifact_name:
        type: string
        default: "zap-report"
      build_image:
        type: boolean
        default: false
      dockerfile:
        type: string
        default: "./Dockerfile"
      context:
        type: string
        default: "."
      app_port:
        type: number
        default: 8000

jobs:
  zap:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Create results files
        run: |
          touch report_html.html report_json.json report_md.md || true
          chmod a+w report_html.html report_json.json report_md.md || true

      - name: Create docker network
        run: docker network create zapnet || true

      - name: Build app image (optional)
        if: ${{ inputs.build_image == true }}
        run: |
          docker build -t app:ci -f "${{ inputs.dockerfile }}" "${{ inputs.context }}"

      - name: Run app container (optional)
        if: ${{ inputs.build_image == true }}
        run: |
          docker run -d --rm --name app --network zapnet -p ${{ inputs.app_port }}:${{ inputs.app_port }} app:ci

      - name: Wait for app (only if target is localhost or app)
        if: startsWith(inputs.target, 'http://localhost') || startsWith(inputs.target, 'http://app') || startsWith(inputs.target, 'http://127.0.0.1') || startsWith(inputs.target, 'http://host.docker.internal') || startsWith(inputs.target, 'http://0.0.0.0')
        run: |
          TARGET="${{ inputs.target }}"
          echo "Waiting for ${TARGET} to be ready..."
          for i in {1..30}; do
            if curl -fsS "${TARGET}" >/dev/null 2>&1; then
              echo "Target is up."; exit 0
            fi
            echo "Waiting for ${TARGET}... ($i)"; sleep 2
          done
          echo "Target did not start in time."; docker logs app || true; exit 1

      - name: Run ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: ${{ inputs.target }}
          fail_action: true
          cmd_options: "-m ${{ inputs.max_time }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Stop app (if started)
        if: always() && inputs.build_image == true
        run: docker stop app || true

      - name: Upload ZAP report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}-${{ github.run_id }}
          path: |
            report_html.html
            report_json.json
            report_md.md
          if-no-files-found: ignore

      - name: Remove docker network
        if: always()
        run: docker network rm zapnet || true

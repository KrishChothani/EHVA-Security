name: Vulnerable Port Detection & Notification

on:
  workflow_call:
    inputs:
      targets:
        description: "Hostnames or IPs to scan (space/comma separated)"
        required: false
        type: string
        default: "localhost"
      port_spec:
        description: "Port range or list (e.g., '20-1024,3000,8080')"
        required: false
        type: string
        default: "20-1024,3000,8080,8443"
      deny_on_open:
        description: "Fail workflow if open/vulnerable ports are found"
        required: false
        type: boolean
        default: true
      sender_name:
        description: "Display name for the email sender"
        required: false
        type: string
        default: "EHVA Security Bot"
      email_cc:
        description: "CC addresses (comma-separated)"
        required: false
        type: string
        default: "krishchothani259@gmail.com"

    secrets:
      SMTP_HOST:
        required: true
      SMTP_PORT:
        required: true
      SMTP_USER:
        required: true
      SMTP_PASS:
        required: true

jobs:
  scan_ports:
    name: üîç Vulnerable Port Scan
    runs-on: ubuntu-latest

    outputs:
      open_ports: ${{ steps.portscan.outputs.open_ports }}
      found_vuln: ${{ steps.portscan.outputs.found_vuln }}

    steps:
      - name: Install nmap
        run: sudo apt-get update && sudo apt-get install -y nmap

      - name: Run nmap Vulnerability Scan
        id: portscan
        shell: bash
        run: |
          TARGETS="${{ inputs.targets }}"
          PORTS="${{ inputs.port_spec }}"

          echo "üîé Scanning ${TARGETS} on ports: ${PORTS}"
          nmap -Pn -sV --script vuln -p "${PORTS}" ${TARGETS} -oN scan_result.txt || true

          echo "---- Scan Output ----"
          cat scan_result.txt

          OPEN_PORTS=$(grep "open" scan_result.txt || true)
          VULN_LINES=$(grep -E "VULNERABLE|CVE-|vulnerable" scan_result.txt || true)

          if [ -n "$VULN_LINES" ]; then
            echo "‚ùå Vulnerabilities detected!"
            echo "found_vuln=true" >> $GITHUB_OUTPUT
            echo "open_ports<<EOF" >> $GITHUB_OUTPUT
            echo "$VULN_LINES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            exit 1
          elif [ -n "$OPEN_PORTS" ]; then
            echo "‚ö†Ô∏è Open ports found (no explicit vuln info)."
            echo "found_vuln=true" >> $GITHUB_OUTPUT
            echo "open_ports<<EOF" >> $GITHUB_OUTPUT
            echo "$OPEN_PORTS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            # Only exit with 1 if deny_on_open is true when only open ports are found
            if ${{ inputs.deny_on_open }}; then
              exit 1
            fi
          else
            echo "‚úÖ No open or vulnerable ports found."
            echo "found_vuln=false" >> $GITHUB_OUTPUT
            echo "open_ports=None" >> $GITHUB_OUTPUT
          fi

  send_email:
    name: üìß Notify Contributor
    needs: scan_ports
    if: ${{ always() }}
    uses: KrishChothani/EHVA-Security/.github/workflows/email_service.yml@main
    with:
      to: >-
        ${{ github.event_name == 'pull_request'
            && format('{0}+{1}@users.noreply.github.com',
                      github.event.pull_request.user.id,
                      github.event.pull_request.user.login)
            || format('{0}@users.noreply.github.com', github.actor) }}
      cc: ${{ inputs.email_cc }}
      sender_name: ${{ inputs.sender_name }}
      subject: >-
        üö® [${{ github.repository }}] Vulnerable Ports ${{
          needs.scan_ports.result == 'failure' && 'Detected' || 'Scan Passed'
        }}
      body: |
        <h2>üö® Vulnerable Port Scan Report</h2>
        <p><strong>Repository:</strong> <a href="https://github.com/${{ github.repository }}">${{ github.repository }}</a></p>
        <p><strong>Branch:</strong> ${{ github.ref_name }}</p>
        <p><strong>Triggered by:</strong> ${{ github.actor }}</p>
        <p><strong>Event:</strong> ${{ github.event_name }}</p>

        ${{ needs.scan_ports.outputs.open_ports != 'None'
            && format('<p><strong>Open/Vulnerable Ports:</strong></p><pre>{0}</pre>', needs.scan_ports.outputs.open_ports)
            || '<p><strong>Open Ports:</strong> None ‚úÖ</p>' }}

        <hr/>
        <p><strong>Status:</strong> ${{ needs.scan_ports.result == 'failure' && '‚ùå Ports Found ‚Äî Push Denied' || '‚úÖ Clean ‚Äî Safe to Push' }}</p>
        <p>This automated scan was performed by <strong>EHVA Security Port Scanner</strong>.</p>
        <p>Logs: <a href="https://github.com/${{ github.repository }}/actions">GitHub Actions</a></p>

    secrets:
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}

  block_push:
    name: ‚ùå Deny Push if Vulnerabilities Found
    runs-on: ubuntu-latest
    needs: scan_ports
    if: ${{ needs.scan_ports.result == 'failure' && inputs.deny_on_open }}
    steps:
      - run: |
          echo "‚ùå Push blocked: Vulnerable or open ports detected."
          exit 1

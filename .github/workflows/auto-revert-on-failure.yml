name: Auto Revert on Workflow Failure

on:
  workflow_call:
    inputs:
      revert_mode:
        description: "How to revert: 'pr' (default, safe) or 'push' (direct commit)"
        required: false
        type: string
        default: "pr"
      pr_title:
        description: "Title for the auto-revert PR (if revert_mode = pr)"
        required: false
        type: string
        default: "Revert failing commit: ${{ github.event.workflow_run.head_sha }}"
      pr_body:
        description: "Body/description for the auto-revert PR"
        required: false
        type: string
        default: |
          This PR reverts the commit that caused workflow **${{ github.event.workflow_run.name }}** to fail.
          - Branch: **${{ github.event.workflow_run.head_branch }}**
          - Commit: **${{ github.event.workflow_run.head_sha }}**
          - Run: ${{ github.event.workflow_run.html_url }}

      sender_name:
        description: "Display name for email sender"
        required: false
        type: string
        default: "EHVA Auto-Reverter"
      email_cc:
        description: "CC addresses, comma-separated"
        required: false
        type: string
        default: "krishchothani259@gmail.com"

    secrets:
      # Email for notification
      SMTP_HOST: { required: true }
      SMTP_PORT: { required: true }
      SMTP_USER: { required: true }
      SMTP_PASS: { required: true }

      # Optional token for pushing to protected branches (recommended if using revert_mode=push)
      REVERT_TOKEN:
        required: false

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  resolve_recipient:
    name: üë§ Resolve Commit Author Email
    runs-on: ubuntu-latest
    outputs:
      to: ${{ steps.pick.outputs.to }}
    steps:
      - id: pick
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const github = require('@actions/github');
            const run = github.context.payload.workflow_run;

            async function getCommitEmail(sha) {
              try {
                const { owner, repo } = github.context.repo;
                const resp = await github.rest.repos.getCommit({ owner, repo, ref: sha });
                return resp?.data?.commit?.author?.email
                    || resp?.data?.commit?.committer?.email
                    || null;
              } catch (e) {
                core.warning(`Commit lookup failed: ${e.message}`);
                return null;
              }
            }

            let to = await getCommitEmail(run.head_sha);

            // fallback to PR author noreply if present
            if (!to && Array.isArray(run.pull_requests) && run.pull_requests.length > 0) {
              const pr = run.pull_requests[0];
              const login = pr?.head?.user?.login || pr?.user?.login;
              const id = pr?.head?.user?.id || pr?.user?.id;
              if (id && login) to = `${id}+${login}@users.noreply.github.com`;
            }

            // fallback to actor noreply
            if (!to) {
              const actor = run?.actor?.login || github.context.actor;
              const actorId = run?.actor?.id;
              to = actorId && actor ? `${actorId}+${actor}@users.noreply.github.com` : `${actor}@users.noreply.github.com`;
            }

            core.setOutput('to', to);
            core.info(`Will notify: ${to}`);

  make_revert:
    name: ‚ôªÔ∏è Create Revert (PR or Direct Push)
    runs-on: ubuntu-latest
    outputs:
      revert_branch: ${{ steps.outs.outputs.revert_branch }}
      revert_created: ${{ steps.outs.outputs.revert_created }}
      revert_mode: ${{ steps.outs.outputs.revert_mode }}
    steps:
      - name: Prepare
        id: prep
        run: |
          echo "TARGET_BRANCH=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_ENV
          echo "BAD_SHA=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV
          echo "MODE=${{ inputs.revert_mode }}" >> $GITHUB_ENV

      - name: Checkout failing branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_BRANCH }}
          fetch-depth: 0
          token: ${{ secrets.REVERT_TOKEN != '' && secrets.REVERT_TOKEN || github.token }}

      - name: Configure git
        run: |
          git config user.name "EHVA Auto-Reverter"
          git config user.email "actions@users.noreply.github.com"

      - name: Revert commit (create branch for PR mode)
        id: revert
        shell: bash
        run: |
          set -e
          echo "Reverting ${BAD_SHA} on ${TARGET_BRANCH} using mode ${MODE}"

          if [ "${MODE}" = "push" ]; then
            git revert --no-edit "${BAD_SHA}"
            git push origin "HEAD:${TARGET_BRANCH}"
            echo "REVERT_BRANCH=${TARGET_BRANCH}" >> $GITHUB_ENV
          else
            BR="revert-${BAD_SHA:0:7}-$(date +%s)"
            git checkout -b "${BR}"
            git revert --no-edit "${BAD_SHA}"
            git push origin "${BR}"
            echo "REVERT_BRANCH=${BR}" >> $GITHUB_ENV
          fi

      - name: Open PR (if mode=pr)
        id: pr
        if: ${{ inputs.revert_mode == 'pr' }}
        uses: actions/github-script@v7
        with:
          script: |
            const github = require('@actions/github');
            const core = require('@actions/core');
            const { owner, repo } = github.context.repo;

            const head = process.env.REVERT_BRANCH;
            const base = process.env.TARGET_BRANCH;
            const title = `${process.env.PR_TITLE || ''}` || core.getInput('pr_title') || 'Auto Revert';
            const body = `${process.env.PR_BODY || ''}` || core.getInput('pr_body') || 'Auto revert for failing workflow';

            const res = await github.rest.pulls.create({
              owner, repo, head, base, title, body
            });
            core.info(`Opened PR #${res.data.number}`);

      - name: Outputs
        id: outs
        run: |
          echo "revert_branch=${REVERT_BRANCH}" >> $GITHUB_OUTPUT
          echo "revert_created=true" >> $GITHUB_OUTPUT
          echo "revert_mode=${MODE}" >> $GITHUB_OUTPUT
        env:
          REVERT_BRANCH: ${{ env.REVERT_BRANCH }}
          MODE: ${{ env.MODE }}

  notify:
    name: üìß Email Committer
    runs-on: ubuntu-latest
    needs: [resolve_recipient, make_revert]
    steps:
      - name: Send Email via EHVA Email Service
        uses: KrishChothani/EHVA-Security/.github/workflows/email_service.yml@main
        with:
          to: ${{ needs.resolve_recipient.outputs.to }}
          cc: ${{ inputs.email_cc }}
          sender_name: ${{ inputs.sender_name }}
          subject: >-
            ‚ôªÔ∏è [${{ github.repository }}] Auto Revert (${{
              needs.make_revert.outputs.revert_mode == 'push' && 'Pushed' || 'PR Opened'
            }}) for failed workflow: ${{ github.event.workflow_run.name }}
          body: |
            <h2>‚ôªÔ∏è Auto Revert Triggered</h2>
            <p><strong>Repository:</strong> <a href="https://github.com/${{ github.repository }}">${{ github.repository }}</a></p>
            <p><strong>Failed Workflow:</strong> ${{ github.event.workflow_run.name }}</p>
            <p><strong>Branch:</strong> ${{ github.event.workflow_run.head_branch }}</p>
            <p><strong>Commit:</strong> <a href="https://github.com/${{ github.repository }}/commit/${{ github.event.workflow_run.head_sha }}">${{ github.event.workflow_run.head_sha }}</a></p>

            <p><strong>Revert Mode:</strong> ${{ needs.make_revert.outputs.revert_mode }}</p>
            <p><strong>Revert Branch:</strong> ${{ needs.make_revert.outputs.revert_branch }}</p>

            <p><a href="${{ github.event.workflow_run.html_url }}">üîó View Failed Run</a></p>
            <hr/>
            <p>Sent by <strong>EHVA Auto-Reverter</strong>.</p>
        secrets:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}

  fail_check:
    # Always fail so the "revert service" itself shows ‚ùå and can be required in branch protection
    name: ‚ùå Mark as Failed (to block)
    runs-on: ubuntu-latest
    needs: [make_revert, notify]
    steps:
      - run: |
          echo "Revert performed (or PR opened) because a workflow failed. Marking this check as failed to block merge."
          exit 1
